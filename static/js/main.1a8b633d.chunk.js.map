{"version":3,"sources":["Components/InputForm.js","Components/Teams.js","Components/Randomizer.js","App.js","reportWebVitals.js","index.js"],"names":["InputForm","handleButton","Form","Label","style","marginLeft","Row","Col","Control","type","placeholder","className","Button","variant","onClick","marginTop","Teams","teams","teamACards","map","person","index","Card","Title","Header","teamBCards","output","card","console","log","Randomizer","useState","SetTeams","Container","input","document","getElementsByClassName","persons","slice","call","arr","teamA","teamARoles","teamB","teamBRoles","length","splice","Math","floor","random","push","randomize","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a8b633d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst InputForm = ({handleButton}) => {\r\n    return (\r\n        <Form>\r\n            <Form.Label style={{marginLeft: '8px'}}>Enter names:</Form.Label>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 1\" className=\"person bg-dark\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 2\" className=\"person bg-dark\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 3\" className=\"person bg-dark\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 4\" className=\"person bg-dark\"/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 5\" className=\"person bg-dark\"/>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control type=\"text\" placeholder=\"Person 6\" className=\"person bg-dark\"/>\r\n                </Col>\r\n            </Row>\r\n            <Button variant=\"dark\" type=\"button\" onClick={handleButton} style={{marginLeft: '8px', marginTop: '10px'}}>\r\n                Randomize\r\n            </Button>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Teams = ({teams}) => {\r\n    const teamACards = teams[0].map((person, index) => {\r\n        return (\r\n            <Card className=\"bg-dark text-white\">\r\n                <Card.Title>{person[0]}</Card.Title>\r\n                <Card.Header>{person[1]}</Card.Header>\r\n            </Card>\r\n        )\r\n    });\r\n\r\n    const teamBCards = teams[1].map((person, index) => {\r\n        return (\r\n            <Card className=\"bg-dark text-white\">\r\n                <Card.Title>{person[0]}</Card.Title>\r\n                <Card.Header>{person[1]}</Card.Header>\r\n            </Card>\r\n        )\r\n    });\r\n\r\n    const output = teamACards.map((card, index) => {\r\n        return (\r\n            <Row>\r\n                <Col>\r\n                    {card}\r\n                </Col>\r\n                <Col>\r\n                    {teamBCards[index]}\r\n                </Col>\r\n            </Row>\r\n        )\r\n    });\r\n    console.log(teamACards)\r\n    console.log(output[0]);\r\n\r\n    return (\r\n        <p style={{marginTop: '1%'}}>{output}</p>\r\n    );\r\n\r\n}\r\n\r\nexport default Teams;","import React, { useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport InputForm from './InputForm';\r\nimport Teams from './Teams';\r\n\r\nconst Randomizer = () => {\r\n    const [teams, SetTeams] = useState([[],[]]);\r\n\r\n    //Expect arr to be an array of six strings\r\n    const randomize = (arr) => {\r\n        var teamA = [];\r\n        var teamARoles = [\"Mid\", \"Jungle\", \"Bottom\"];\r\n        var teamB = [];\r\n        var teamBRoles = [\"Mid\", \"Jungle\", \"Bottom\"];\r\n\r\n        while(arr.length > 0){\r\n            const person = arr.splice(Math.floor(Math.random() * arr.length), 1);\r\n            (arr.length % 2 === 0) ? teamA.push([person, teamARoles.splice(Math.floor(Math.random() * teamARoles.length), 1)]) \r\n                                    : teamB.push([person, teamBRoles.splice(Math.floor(Math.random() * teamBRoles.length), 1)]);\r\n        }\r\n\r\n        return [teamA, teamB];\r\n    }\r\n\r\n    const handleRandomizeButton = () => {\r\n        const input = document.getElementsByClassName('person');\r\n        //Convert HTML Collection to Array\r\n        let persons = [].slice.call(input);\r\n        persons = persons.map((person, index) => {\r\n            return (person.value) ? person.value : \"Person \" + (index + 1);\r\n        });\r\n        persons = randomize(persons);\r\n        SetTeams(persons);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <InputForm handleButton={handleRandomizeButton} />\r\n            <Teams teams={teams} />   \r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Randomizer;","import './App.css';\nimport Randomizer from './Components/Randomizer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Randomizer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}